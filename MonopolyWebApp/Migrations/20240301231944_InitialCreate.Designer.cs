// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MonopolyWebApp.Database;

#nullable disable

namespace MonopolyWebApp.Migrations
{
    [DbContext(typeof(MonopolyDBContext))]
    [Migration("20240301231944_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MonopolyWebApp.Data.Rent", b =>
                {
                    b.Property<int>("RentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RentID"));

                    b.Property<int>("RentBase")
                        .HasColumnType("int");

                    b.Property<int>("RentFour")
                        .HasColumnType("int");

                    b.Property<int>("RentHotel")
                        .HasColumnType("int");

                    b.Property<int>("RentOne")
                        .HasColumnType("int");

                    b.Property<int>("RentThree")
                        .HasColumnType("int");

                    b.Property<int>("RentTwo")
                        .HasColumnType("int");

                    b.HasKey("RentID");

                    b.ToTable("Rent");
                });

            modelBuilder.Entity("MonopolyWebApp.Data.Space", b =>
                {
                    b.Property<int>("SpaceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpaceID"));

                    b.Property<int>("BuildingAmount")
                        .HasColumnType("int");

                    b.Property<bool>("HasProp")
                        .HasColumnType("bit");

                    b.Property<string>("Img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PropertyID")
                        .HasColumnType("int");

                    b.HasKey("SpaceID");

                    b.HasIndex("PropertyID");

                    b.ToTable("Spaces");
                });

            modelBuilder.Entity("MonopolyWebApp.Models.Property", b =>
                {
                    b.Property<int>("PropertyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PropertyID"));

                    b.Property<int>("BuildingCost")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMortagaged")
                        .HasColumnType("bit");

                    b.Property<int>("MortageValue")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Owner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("RentID")
                        .HasColumnType("int");

                    b.HasKey("PropertyID");

                    b.HasIndex("RentID");

                    b.ToTable("Property");
                });

            modelBuilder.Entity("MonopolyWebApp.Data.Space", b =>
                {
                    b.HasOne("MonopolyWebApp.Models.Property", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyID");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("MonopolyWebApp.Models.Property", b =>
                {
                    b.HasOne("MonopolyWebApp.Data.Rent", "Rent")
                        .WithMany()
                        .HasForeignKey("RentID");

                    b.Navigation("Rent");
                });
#pragma warning restore 612, 618
        }
    }
}
